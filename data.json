{
   "name": "Elias Oumghar",
   "tagline": "Développeur Full Stack | Passionné de code et de jeux",
   "initials": "EO",
   "contact": {
      "email": "eoumghar@gmail.com",
      "github": "https://github.com/Rengrouze",
      "linkedin": "https://linkedin.com/in/eliasoumghar"
   },
   "techStack": {
      "frontend": [
         { "name": "React", "iconClass": "fa-brands fa-react" },
         { "name": "Vue.js", "iconClass": "fa-brands fa-vuejs" },
         { "name": "JavaScript", "iconClass": "fa-brands fa-js" },
         { "name": "HTML5", "iconClass": "fa-brands fa-html5" },
         { "name": "CSS3", "iconClass": "fa-brands fa-css3-alt" },
         { "name": "Tailwind", "iconClass": "fa-brands fa-css3-alt" },
         { "name": "Next.js", "iconClass": "fa-brands fa-js" }
      ],
      "backend": [
         { "name": "Node.js", "iconClass": "fa-brands fa-node-js" },
         { "name": "Express", "iconClass": "fa-solid fa-server" },
         { "name": "Python", "iconClass": "fa-brands fa-python" },
         { "name": "Java", "iconClass": "fa-brands fa-java" },
         { "name": "C#", "iconClass": "fa-brands fa-microsoft" }
      ],
      "mobile": [
         { "name": "Android", "iconClass": "fa-brands fa-android" },
         { "name": "Java", "iconClass": "fa-brands fa-java" }
      ],
      "devops": [
         { "name": "CI/CD", "iconClass": "fa-solid fa-cloud-arrow-up" },
         { "name": "Git", "iconClass": "fa-brands fa-git-alt" }
      ],
      "databases": [
         { "name": "MySQL", "iconClass": "fa-solid fa-database" },
         { "name": "Sequelize", "iconClass": "fa-solid fa-cubes" },
         { "name": "MongoDB", "iconClass": "fa-solid fa-leaf" }
      ],
      "creative": [
         { "name": "Unity", "iconClass": "fa-brands fa-unity" },
         { "name": "C#", "iconClass": "fa-brands fa-microsoft" },
         { "name": "Game Development", "iconClass": "fa-solid fa-gamepad" },
         { "name": "Foundry VTT", "iconClass": "fa-solid fa-chess-knight" }
      ],
      "tools": [
         { "name": "VS Code", "iconClass": "fa-solid fa-code" },
         { "name": "Postman", "iconClass": "fa-solid fa-rocket" },
         { "name": "Figma", "iconClass": "fa-brands fa-figma" },
         { "name": "GitHub", "iconClass": "fa-brands fa-github" },
         { "name": "Discord.js", "iconClass": "fa-brands fa-discord" },
         { "name": "JWT", "iconClass": "fa-solid fa-key" }
      ]
   },
   "projects": [
      {
         "id": "whatics",
         "title": "WhatICS - Messages Non-Envoyés",
         "description": "Application Android pour écrire et conserver les messages qu'on n'a jamais pu envoyer. Un espace personnel pour exprimer ses émotions et garder trace de ses mots non-dits.",
         "technologies": ["Android", "Java", "SQLite", "Material Design"],
         "status": "in-progress",
         "imageUrl": "./src/WhatICS.JPG",
         "links": {},
         "details": {
            "why": "Nous avons tous des mots qu'on aurait voulu dire mais qu'on n'a jamais pu exprimer. Cette app offre un espace sûr pour ces messages.",
            "goal": "Créer une application simple et intuitive pour écrire, sauvegarder et relire ses messages non-envoyés avec le contexte émotionnel.",
            "features": [
               "Rédaction de messages",
               "Sauvegarde d'émotions",
               "Historique personnel",
               "Interface minimaliste",
               "Données locales"
            ],
            "challenges": "Design UX empathique, gestion des émotions en base, interface intuitive et apaisante."
         }
      },
      {
         "id": "vtt-secret",
         "title": "Système Foundry VTT",
         "description": "Système de jeu personnalisé pour Foundry VTT adapté à un jeu de rôle. Projet personnel avec fonctionnalités spécialisées.",
         "technologies": ["Foundry VTT", "JavaScript", "CSS", "Game Systems", "Handlebars"],
         "status": "in-progress",
         "imageUrl": "./src/Foundry.png",
         "links": {},
         "details": {
            "why": "Après pratiquement 4 ans sur une campagne qui touche à sa fin sur roll20, l'idée d'une deuxième campagne m'a inspiré à commencer un système spécial sur Foundry VTT.",
            "goal": "Créer un système complet et fonctionnel avec des pour jouer à notre jeu de rôle avec toutes les mécaniques spécifiques et de nombreux automatismes.",
            "features": [
               "Système de dés personnalisé",
               "Feuilles de personnage",
               "Compendiums de règles",
               "Automatisations de combat",
               "Intégration des mécaniques de jeu"
            ],
            "challenges": "Adaptation des règles complexes du jeu, création d'une interface utilisateur intuitive, gestion des données de jeu."
         }
      },
      {
         "id": "botohiko",
         "title": "Botohiko Kakita - Bot Discord",
         "description": "Bot Discord customisé pour faciliter l'organisation de nos séances de jeux de rôle.",
         "technologies": ["Node.js", "Discord.js", "Architecture Services"],
         "status": "completed",
         "imageUrl": "./src/boto.jpg",
         "links": {
            "github": "https://github.com/Rengrouze/Botohiko_Kakita"
         },
         "details": {
            "why": "\"T'es tellement jamais disponible que je devrais faire un bot qui va te demander tous les jours si tu es dispo pour une séance de JDR ?\" — Moi, à mon MJ.",
            "goal": "Créer un bot Discord pour automatiser la gestion des séances, tout en lui donnant une personnalité cohérente avec l'univers de notre jeu de rôle.",
            "features": [
               "Rappel quotidien automatique avec messages interactifs",
               "Commandes pour créer automatiquement un événement Discord",
               "Messages personnalisés dans le style du personnage",
               "Rappels et annonces automatiques des sessions programmées lorsque tous les participants annoncent leur disponibilité"
            ],
            "challenges": "Architecture modulaire, gestion des permissions Discord, création d'une personnalité de bot cohérente avec l'univers du jeu, gestion des interactions utilisateur."
         }
      },
      {
         "id": "peebles",
         "title": "Peebles - Jeu Unity",
         "description": "Petit jeu développé sous Unity mettant en œuvre les principes fondamentaux de la POO : héritage, abstraction, encapsulation et polymorphisme.",
         "technologies": ["Unity", "C#", "POO", "Game Development"],
         "status": "completed",
         "imageUrl": "./src/peebles.jpg",
         "links": {
            "github": "https://github.com/Rengrouze/Peebles---POO-pillars-example",
            "demo": "https://play.unity.com/en/games/e1541874-7a07-449d-866e-a06cf460ff2f/build"
         },
         "details": {
            "why": "Projet d'apprentissage Unity pour apprendre les bases du moteur",
            "goal": "Créer un jeu simple mais complet en appliquant rigoureusement les principes de la programmation orientée objet.",
            "features": ["Gameplay simple", "Architecture POO", "Système de score", "Interface utilisateur"],
            "challenges": "Application correcte des principes POO, gestion des états de jeu, optimisation Unity."
         }
      },
      {
         "id": "groupomania",
         "title": "Groupomania - Réseau Social",
         "description": "Réseau social interne complet avec API sécurisée (JWT, gestion des rôles, CRUD) et interface Vue.js moderne. Authentification, posts, commentaires et modération.",
         "technologies": ["Vue.js", "Node.js", "Express", "Sequelize", "MySQL", "JWT"],
         "status": "completed",
         "imageUrl": "./src/groupo.jpg",
         "links": {
            "github": "https://github.com/Rengrouze/API-pour-Projet-7-OC-Oumghar-Elias"
         },
         "details": {
            "why": "Dernier Projet de ma formation Développeur Web OpenClassrooms pour valider mes compétences en développement full-stack.",
            "goal": "Développer un réseau social sécurisé avec toutes les fonctionnalités essentielles et une architecture robuste. Donc un Frontend Vue.js et une API Node.js, la db avec Prisma et MySQL.",
            "features": ["Authentification JWT", "CRUD complet", "Modération", "Système de rôles", "Interface responsive"],
            "challenges": "Sécurisation de l'API, gestion des permissions"
         }
      }
   ]
}
